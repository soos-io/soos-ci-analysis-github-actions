# action.yml
name: "SOOS Core SCA"
author: "SOOS"
description: "Execute SOOS SCA analysis using your remote SOOS configuration"
branding:
  icon: "alert-triangle"
  color: "yellow"
inputs:
  api_key:
    description: 'SOOS API Key'
    required: true
  api_url:
    description: 'SOOS API URL'
    required: false
    default: 'https://api.soos.io/api/'
  branch_name:
    description: 'Branch Name to create scan under'
    required: false
  branch_uri:
    description: 'URI to branch from SCM system.'
    required: false
  build_uri:
    description: 'URI to CI build info.'
    required: false
  build_version:
    description: 'Version of application build artifacts.'
    required: false
  client_id:
    description: 'SOOS Client Id'
    required: true
  directories_to_exclude:
    description: 'Directories to Exclude: Listing of directories (relative to ./) to exclude from the search for manifest files. Example - Correct: bin/start/  Example - Incorrect: ./bin/start/ Example - Incorrect: /bin/start'
    required: false
  files_to_exclude:
    description: 'Files to Exclude: Listing of files (relative to ./) to exclude from the search for manifest files. Example - Correct: bin/start/requirements.txt ... Example - Incorrect: ./bin/start/requirements.txt ... Example - Incorrect: /bin/start/requirements.txt'
    required: false
  log_level:
    description: 'Log level to show: PASS, IGNORE, INFO, WARN, FAIL, DEBUG, ERROR.'
    required: false
    default: 'INFO'
  on_failure:
    description: 'Set the On Failure Scan Strategy: fail_the_build, and continue_on_failure'
    required: false
    default: 'continue_on_failure'
  operating_environment:
    description: 'System info regarding operating system, etc.'
    required: false
    default: ${{ runner.os }}
  output_format:
    description: 'Output format for vulnerabilities: only the value SARIF is available at the moment'
    required: false
  package_managers:
    description: 'List (comma separated) of Package Managers to filter manifest search. (Dart, Erlang, Homebrew, PHP, Java, Nuget, NPM, Python, Ruby, Rust.)'
    required: false
    default: ''
  project_name:
    description: 'The project name that will be displayed on the dashboard. By Default is owner/repository_name'
    required: true
    default: ${{ github.repository }}
  verbose:
    description: 'Enable verbose logging'
    required: false
    default: 'false'

runs:
  using: "docker"
  image: "Dockerfile"
  env:
    SOOS_API_KEY: ${{ inputs.api_key }}
    SOOS_API_URL: ${{ inputs.api_url }}
    SOOS_BRANCH_NAME: ${{ inputs.branch_name }}
    SOOS_BRANCH_URI: ${{ inputs.branch_uri }}
    SOOS_BUILD_URI: ${{ inputs.build_uri }}
    SOOS_BUILD_VERSION: ${{ inputs.build_version }}
    SOOS_CLIENT_ID: ${{ inputs.client_id}}
    SOOS_DIRECTORIES_TO_EXCLUDE: ${{ inputs.directories_to_exclude }}
    SOOS_FILES_TO_EXCLUDE: ${{ inputs.files_to_exclude }}
    SOOS_LOG_LEVEL: ${{ inputs.log_level }}
    SOOS_ON_FAILURE: ${{ inputs.on_failure }}
    SOOS_OPERATING_ENVIRONMENT: ${{ inputs.operating_environment }}
    SOOS_OUTPUT_FORMAT: ${{ inputs.output_format }}
    SOOS_PACKAGE_MANAGERS: ${{ inputs.package_managers }}
    SOOS_PROJECT_NAME: ${{ inputs.project_name }}
    SOOS_VERBOSE: ${{ inputs.verbose }}