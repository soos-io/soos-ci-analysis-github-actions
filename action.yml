# action.yml
name: "SOOS Core SCA"
author: "SOOS"
description: "Execute SOOS SCA analysis using your remote SOOS configuration"
branding:
  icon: "alert-triangle"
  color: "yellow"

inputs:
  client_id:
    description: 'SOOS Client Id'
    required: true
  api_key:
    description: 'SOOS API Key'
    required: true
  api_url:
    description: 'SOOS API URL'
    required: false
    default: 'https://api.soos.io/api/'
  project_name:
    description: 'The project name that will be displayed on the dashboard. By Default is owner/repository_name'
    required: true
    default: ${{ github.repository }}
  mode:
    description: 'The scan mode for the analysis: run_and_wait, async_init, and async_result'
    required: false
    default: 'run_and_wait'
  on_failure:
    description: 'Set the On Failure Scan Strategy: fail_the_build, and continue_on_error'
    required: false
    default: 'fail_the_build'
  directories_to_exclude:
    description: 'Directories to Exclude: Listing of directories (relative to ./) to exclude from the search for manifest files. Example - Correct: bin/start/  Example - Incorrect: ./bin/start/ Example - Incorrect: /bin/start'
    required: false
    default: ''
  files_to_exclude:
    description: 'Files to Exclude: Listing of files (relative to ./) to exclude from the search for manifest files. Example - Correct: bin/start/requirements.txt ... Example - Incorrect: ./bin/start/requirements.txt ... Example - Incorrect: /bin/start/requirements.txt'
    required: false
    default: ''
  analysis_result_max_wait:
    description: 'Maximum seconds to wait for Analysis Result.'
    required: false
    default: '300'
  analysis_result_polling_interval:
    description: 'Polling interval (in seconds) for analysis result completion (success/failure). Min value 10 seconds.'
    required: false
    default: '10'
  debug_print_variables:
    description: 'Enables printing of input/environment variables within the docker container.'
    required: false
    default: 'false'
  branch_uri:
    description: 'URI to branch from SCM system.'
    required: false
    default: ''
  build_version:
    description: 'Version of application build artifacts.'
    required: false
    default: ''
  build_uri:
    description: 'URI to CI build info.'
    required: false
    default: ''
  operating_environment:
    description: 'System info regarding operating system, etc.'
    required: false
    default: ${{ runner.os }}
  sarif:
    description: 'Generate SARIF Report'
    required: false
    default: 'false'
  gpat:
    description: 'Github Personal Access Token to upload SARIF Report.'
    required: false
    default: ''
  package_managers:
    description: List (comma separated) of Package Managers to filter manifest search. (Dart, Erlang, Homebrew, PHP, Java, Nuget, NPM, Python, Ruby, Rust.)
    required: 'false'
    default: ''

runs:
  using: "docker"
  image: "Dockerfile"
  env:
    SOOS_INTEGRATION_NAME: GITHUB_ACTIONS
    SOOS_INTEGRATION_VERSION: 'v0.2.0'

  args:
    - ${{ inputs.client_id }}
    - ${{ inputs.api_key }}
    - ${{ inputs.api_url }}
    - ${{ inputs.project_name }}
    - ${{ inputs.mode }}
    - ${{ inputs.on_failure }}
    - ${{ inputs.directories_to_exclude }}
    - ${{ inputs.files_to_exclude }}
    - ${{ inputs.analysis_result_max_wait }}
    - ${{ inputs.analysis_result_polling_interval }}
    - ${{ inputs.debug_print_variables }}
    - ${{ inputs.branch_uri }}
    - ${{ inputs.build_version }}
    - ${{ inputs.build_uri }}
    - ${{ inputs.operating_environment }}
    - ${{ inputs.sarif }}
    - ${{ inputs.gpat }}
    - ${{ inputs.package_managers}}
